<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Login extends CI_Controller{

    public function __construct()
    {
        parent::__construct();
        $this->load->model('LoginModel');
    }

    public function index(){

        $this->load->view('login/login');
    }

    public function form_validations(){

        $this->form_validation->set_rules('email', 'Email', 'required|valid_email');
        $this->form_validation->set_rules('password', 'Password', 'required|min_length[6]');

        if ($this->form_validation->run() == FALSE)
        {
            $result = array(
                'error' => true,
                'messages' => validation_errors(),
            );
            echo json_encode($result);
        }
        else
        {
            $result = array(
                'error' => false,
                'messages' => "",
            );
            echo json_encode($result);
        }
    }

    public function signup(){
        $create = array(
            'email' => $this->input->post('email'),
            'password' => sha1($this->input->post('password')),
        );

        $this->form_validation->set_rules('email', 'Email', 'required|valid_email');
        $this->form_validation->set_rules('password', 'Password', 'required|min_length[6]');

        $result = $this->LoginModel->login_user($create);

        if ($result){
            $this->session->set_flashdata('alert', array('alert' => true));

            $this->session->set_userdata('id', $result[0]->id);
            $this->session->set_userdata('name', $result[0]->first_name.' '.$result[0]->last_name);
            $this->session->set_userdata('nic', $result[0]->nic);
            $this->session->set_userdata('phone', $result[0]->phone);
            $this->session->set_userdata('email', $result[0]->email);
            $this->session->set_userdata('birthday', $result[0]->birthday);
            $this->session->set_userdata('street', $result[0]->street);
            $this->session->set_userdata('street_two', $result[0]->street_two);
            $this->session->set_userdata('city', $result[0]->city_name);
            $this->session->set_userdata('district', $result[0]->district_id);
            $this->session->set_userdata('province', $result[0]->province_id);
            $this->session->set_userdata('gender', $result[0]->gender);
            $this->session->set_userdata('role', $result[0]->role_name);
            $this->session->set_userdata('role_id', $result[0]->roles);
            $this->session->set_userdata('ward', $result[0]->ward_name);

            redirect('welcome');
        }else{
            $alert = array(
                'type'   => "danger",
                'message'=> "Invalid Username or Password",
            );

            $this->session->set_flashdata('alert',$alert);
            redirect('login/Login');
        }
    }

    public function logout(){
        session_destroy();
        redirect('login/login');

    }

    public function forgotpassword(){
        $email = $this->input->post('email');
        $result = $this->LoginModel->forgotpassword($email);

        $this->form_validation->set_rules('email', 'Email', 'required|valid_email');

        if($result) {
            $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
            $randomString = '';

            for ($i = 0; $i < 10; $i++) {
                $index = rand(0, strlen($characters) - 1);
                $randomString .= $characters[$index];
            }

            $this->LoginModel->updatepassword($email,$randomString);

            $mail_settings = Array(
                'protocol'    => 'smtp',
                'smtp_host'   => 'smtp.googlemail.com',
                'smtp_port'   => '587',
                'smtp_user'   => 'rashmibit1234@gmail.com',
                'smtp_pass'   => 'rashmi1234',
                'mailtype'    => 'html',
                'smtp_crypto' => 'tls',
                'charset'     => 'utf-8',
                'newline'     => "\r\n"
            );

            $this->load->library('email', $mail_settings);
            $this->email->from('admin@pdos.lk', 'Patient Diet Ordering System');
            $this->email->to($email);
            $this->email->set_mailtype("html");
            $this->email->subject('Patient Diet Ordering System - Password Reset Request');
            $this->email->message('
            <p>Hi '.$result[0]->first_name.' '.$result[0]->last_name.',</p>
            <p>Please use following new credential to complete your system login.</p>
            <p>Email : '.$result[0]->email.'</p>
            <p>Password : '.$randomString.'</p>
            <p>Thank You!</p>
            <small>This email is automatically generated by Patient Diet Ordering System - Colombo South Teaching Hospital</small>
            ');
            $this->email->send();

            $alert = array(
                'type'   => "success",
                'message'=> "Message has been sent",
            );

            $this->session->set_flashdata('alert',$alert);
            redirect("login/Login");
        }
        else{
            $alert = array(
                'type'   => "danger",
                'message'=> "Email is not valid",
            );

            $this->session->set_flashdata('alert',$alert);
            redirect('login/ForgotPassword');
        }

    }






}




?>